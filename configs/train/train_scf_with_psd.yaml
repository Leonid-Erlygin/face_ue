seed_everything: 777
trainer:
  logger:
    class_path: pytorch_lightning.loggers.WandbLogger
    init_args:
      project: "face-ue"
  log_every_n_steps: 3
  default_root_dir: outputs/scf_train
  enable_checkpointing: true
  callbacks:
  - class_path: pytorch_lightning.callbacks.ModelCheckpoint
    init_args: 
      every_n_epochs: 1
      dirpath: outputs/scf_new_data/vgg_test
      save_last: True
  - class_path: pytorch_lightning.callbacks.LearningRateMonitor
    init_args: 
      logging_interval: "step"
  - class_path: face_lib.models.scf.Prediction_writer
    init_args: 
      output_dir: /app/cache/features
      file_name: scf_pixel_drop_album_75%_embs_IJBC # scf_embs_inter  #scf_embs_lfw #scf_embs_ms1m_3531-classes_0-seed_30-min-class-size
      write_interval: epoch
  max_epochs: 16
  accelerator: gpu
  devices: 1
  num_sanity_val_steps: 0
model:
    class_path: face_lib.models.scf.SphereConfidenceFace
    init_args:
        backbone:
            class_path: face_lib.models.lightning_wrappers.ResNet
            init_args:
                resnet_name: iresnet50_normalized
                weights: /app/model_weights/backbone/ms1mv3_arcface_r50/backbone.pth
                learnable: False #False
        head:
            class_path: face_lib.models.heads.SCFHead
            init_args:
                convf_dim: 25088
                latent_vector_size: 2048 #8096
        scf_loss:
            class_path: face_lib.models.losses.KLDiracVMF
            init_args:
                z_dim: 512
                radius: 64
                #gamma: 2
        softmax_weights:
            class_path: face_lib.models.scf.SoftmaxWeights
            init_args:
                softmax_weights_path: /app/model_weights/backbone/vgg_iresnet50/softmax_weight.pt
                radius: 64 #${model.scf_loss.init_args.radius}
        optimizer_params:
            optimizer_path: torch.optim
            optimizer_name: AdamW # Adam
            params:
                lr: 3e-5
                weight_decay: 5e-4
        scheduler_params:
            scheduler: StepLR
            params:
                step_size: 2
                gamma: 0.5
            interval: "step"
            frequency: 1
        permute_batch: False
        validation_dataset:
            class_path: face_lib.dataset_classes.arcface_ijb.IJB_aligned_images
            init_args:
                dataset_path: /app/datasets/arcface_ijb/IJBC
                dataset_name: IJBC
                norm_image: True
        template_pooling_strategy:
            class_path: evaluation.template_pooling_strategies.PoolingConcentration
        recognition_method:
            class_path: evaluation.verification_methods.distance_based_verification.VerifEval
            init_args:
                distance_function:
                    class_path: evaluation.distance_functions.distance_functions.CosineSimPairwise
        verification_metrics:
            - _target_: evaluation.metrics.TarFar
              far_range: [-6, -0.5, 0.1]
              display_fars: [1e-6, 1e-5, 1e-4, 1e-3]

data:
    class_path: face_lib.dataset_classes.lightning_datasets.UncertaintyDataModule
    init_args:
        train_dataset:
            class_path: face_lib.dataset_classes.lightning_datasets.VGGFaceDataset
            init_args:
                root_dir: /app/datasets/faces_vgg_112x112/
            # class_path: face_lib.dataset_classes.lightning_datasets.MXFaceDataset
            # init_args:
            #     root_dir: /app/datasets/ms1m/
                # album_augments: 
                # - class_path: albumentations
                #   aug_name: PixelDropout
                #   init_args: 
                #     dropout_prob: 0.2
                #     p: 0.5
                # - class_path: albumentations
                #   aug_name: PixelDropout
                #   init_args: 
                #     dropout_prob: 0.4
                #     p: 0.5
                # - class_path: albumentations
                #   aug_name: PixelDropout
                #   init_args: 
                #     dropout_prob: 0.7
                #     p: 0.5
                # album_probability: 0.75
        validation_dataset:
            class_path: face_lib.dataset_classes.arcface_ijb.IJB_aligned_images
            init_args:
                dataset_path: /app/datasets/arcface_ijb/IJBC
                dataset_name: IJBC
                norm_image: True

        predict_dataset:
            class_path: face_lib.dataset_classes.arcface_ijb.IJB_aligned_images
            init_args:
                dataset_path: /app/datasets/arcface_ijb/IJBC
                dataset_name: IJBC
                norm_image: True
        batch_size: 400
        num_workers: 36




# predict_dataset:
#     class_path: face_lib.dataset_classes.lightning_datasets.MXFaceDataset
#     init_args: 
#         root_dir: /app/datasets/ms1m/
#         test: True
#         num_classes: 3531
# predict_dataset:
#     class_path: face_lib.dataset_classes.arcface_ijb.IJB_aligned_images
#     init_args:
#         dataset_path: /app/datasets/gaussian_nose
#         dataset_name: nose
#         norm_image: True
# predict_dataset:
#     class_path: face_lib.dataset_classes.arcface_ijb.IJB_aligned_images
#     init_args:
#         dataset_path: /app/datasets/interpolation
#         dataset_name: inter
#         norm_image: True
# predict_dataset:
#     class_path: face_lib.dataset_classes.lfw.LFW_aligned_images
#     init_args:
#         dataset_path: /app/datasets/lfw/data_aligned_112_112
        #norm_image: True
# predict_dataset:
#     class_path: face_lib.dataset_classes.arcface_ijb.IJB_aligned_images
#     init_args:
#         dataset_path: /app/datasets/arcface_ijb/IJBB
#         dataset_name: IJBB
#         norm_image: True







 # Old with default training
                    # v2.RandomHorizontalFlip(),
                    # Not working due to the argem
                    # v2.RandomApply([
                    #     v2.RandomChoice(
                    #     transforms = [
                    #         A.Blur(blur_limit=4, p = 1.0),
                    #         A.Blur(blur_limit=7, p = 1.0),
                    #         A.Blur(blur_limit=9, p = 1.0),
                    #         A.Blur(blur_limit=11, p = 1.0),
                    #         A.Blur(blur_limit=13, p = 1.0)
                    #                 ],
                    #                 p = [1/5 for i in range(5)])
                    #                 ],
                    #                p = 0.5
                    # ),


  # Old version for bach thesis
                    # v2.RandomApply(
                    #     [v2.RandomChoice(
                    #         transforms = [
                    #                       v2.GaussianBlur(kernel_size=(21, 21), sigma=(1.5, 1.5)),
                    #                       v2.GaussianBlur(kernel_size=(21, 21), sigma=(2.3, 2.3)),
                    #                       v2.GaussianBlur(kernel_size=(21, 21), sigma=(3.0, 3.0)),
                    #                       v2.GaussianBlur(kernel_size=(21, 21), sigma=(4.0, 4.0)),
                    #                       v2.GaussianBlur(kernel_size=(21, 21), sigma=(6.0, 6.0)),
                    #                       v2.GaussianBlur(kernel_size=(21, 21), sigma=(10.0, 10.0)),
                    #                       v2.GaussianBlur(kernel_size=(21, 21), sigma=(15.0, 15.0)),
                    #                       v2.GaussianBlur(kernel_size=(21, 21), sigma=(20.0, 20.0))],
                    #         p = [1/8 for _ in range(0, 8)]
                    #     )],
                    #     p=0.3,
                    # ),
                    # v2.RandomApply(
                    #     torch.nn.ModuleList([v2.ElasticTransform(alpha=250.0)]), p=0.05
                    # ),
                    # v2.RandomApply(torch.nn.ModuleList([v2.AugMix()]), p=0.05),