hydra:
  run:
    dir: ${exp_dir}
#exp_dir: outputs/ijb_evals/ijb_evals_${now:%Y-%m-%d_%H-%M-%S}
exp_dir: experiments/pooling_methods

use_two_galleries: True
recompute_template_pooling: False

test_dataset:
  _target_: evaluation.test_datasets.FaceRecogntioniDataset
  dataset_name: survFace
  dataset_path: /app/datasets/QMUL-SurvFace/Face_Identification_Test_Set

# test_dataset:
#   _target_: evaluation.test_datasets.FaceRecogntioniDataset
#   dataset_name: IJBC
#   dataset_path: /app/datasets/arcface_ijb/IJBC

open_set_identification_metrics:
  - _target_: evaluation.metrics.DetectionAndIdentificationRate
    top_n_ranks: [1, 5, 10, 20]
    far_range: [-4, 0, 100]
    display_fars: [0.0001, 0.001, 0.01, 0.1, 1]

closed_set_identification_metrics:
  - _target_: evaluation.metrics.CMC
    top_n_ranks: [1, 2, 3, 5, 10, 20, 50, 100, 500, 1000]
    display_ranks: [1, 5, 10, 50, 100, 500, 1000]

verification_metrics:
  - _target_: evaluation.metrics.TarFar
    far_range: [-6, 0, 100]
    display_fars: [0.000001, 0.00001, 0.0001, 0.001, 0.01, 0.1, 1]

open_set_uncertainty_metrics:
  - _target_: evaluation.metrics.MeanDistanceReject
    metric_to_monitor:
      _target_: evaluation.metrics.DetectionAndIdentificationRate
      top_n_ranks: [1, 10, 20]
      far_range: [-4, 0, 100] 
      display_fars: [0.0001, 0.001, 0.01, 0.1, 1]

# open_set_identification_methods:
#   - evaluation_function: 
#       _target_: evaluation.eval_functions.open_set_identification.CosineSim
#       confidence_function: 
#         _target_: evaluation.confidence_functions.MaxSimilarity_confidence
#     embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
#     template_pooling_strategy:
#       _target_: evaluation.template_pooling_strategies.PoolingDefault
#     use_detector_score: False
#     pretty_name: CosineSim_MeanPool

#   - evaluation_function: 
#       _target_: evaluation.eval_functions.open_set_identification.CosineSim
#       confidence_function: 
#         _target_: evaluation.confidence_functions.MaxSimilarity_confidence
#     embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
#     template_pooling_strategy:
#       _target_: evaluation.template_pooling_strategies.PoolingDefault
#     use_detector_score: True
#     pretty_name: CosineSim_DetScore_MeanPool

#   - evaluation_function: 
#       _target_: evaluation.eval_functions.open_set_identification.CosineSim
#       confidence_function: 
#         _target_: evaluation.confidence_functions.MaxSimilarity_confidence
#     embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
#     template_pooling_strategy:
#       _target_: evaluation.template_pooling_strategies.PoolingSCF
#     use_detector_score: False
#     pretty_name: CosineSim_SCF-Pool

#   - evaluation_function: 
#       _target_: evaluation.eval_functions.open_set_identification.CosineSim
#       confidence_function: 
#         _target_: evaluation.confidence_functions.MaxSimilarity_confidence
#     embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
#     template_pooling_strategy:
#       _target_: evaluation.template_pooling_strategies.PoolingSCF
#     use_detector_score: True
#     pretty_name: CosineSim_DetScore_SCF-Pool

#   - evaluation_function: 
#       _target_: evaluation.eval_functions.open_set_identification.CosineSim
#       confidence_function: 
#         _target_: evaluation.confidence_functions.MaxSimilarity_confidence
#     embeddings_path: ${test_dataset.dataset_path}/embeddings/pfe_embs_${test_dataset.dataset_name}.npz
#     template_pooling_strategy:
#       _target_: evaluation.template_pooling_strategies.PoolingPFEHarmonicMean
#     use_detector_score: False
#     pretty_name: CosineSim_PFEHarmonicMean-Pool

#   - evaluation_function: 
#       _target_: evaluation.eval_functions.open_set_identification.CosineSim
#       confidence_function: 
#         _target_: evaluation.confidence_functions.MaxSimilarity_confidence
#     embeddings_path: ${test_dataset.dataset_path}/embeddings/pfe_embs_${test_dataset.dataset_name}.npz
#     template_pooling_strategy:
#       _target_: evaluation.template_pooling_strategies.PoolingPFEHarmonicMean
#     use_detector_score: True
#     pretty_name: CosineSim_DetScore_PFEHarmonicMean-Pool



  # - evaluation_function: 
  #     _target_: evaluation.eval_functions.open_set_identification.SCF
  #     confidence_function: 
  #       _target_: evaluation.confidence_functions.MaxSimilarity_confidence
  #     k_shift: 0
  #     cosine_pred: False
  #   embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
  #   template_pooling_strategy:
  #     _target_: evaluation.template_pooling_strategies.PoolingSCF
  #   use_detector_score: True



closed_set_identification_methods:
  - evaluation_function: 
      _target_: evaluation.eval_functions.open_set_identification.CosineSim
      confidence_function: 
        _target_: evaluation.confidence_functions.MaxSimilarity_confidence
    embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
    template_pooling_strategy:
      _target_: evaluation.template_pooling_strategies.PoolingDefault
    use_detector_score: False
    pretty_name: CosineSim_MeanPool

  - evaluation_function: 
      _target_: evaluation.eval_functions.open_set_identification.CosineSim
      confidence_function: 
        _target_: evaluation.confidence_functions.MaxSimilarity_confidence
    embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
    template_pooling_strategy:
      _target_: evaluation.template_pooling_strategies.PoolingDefault
    use_detector_score: True
    pretty_name: CosineSim_DetScore_MeanPool

  - evaluation_function: 
      _target_: evaluation.eval_functions.open_set_identification.CosineSim
      confidence_function: 
        _target_: evaluation.confidence_functions.MaxSimilarity_confidence
    embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
    template_pooling_strategy:
      _target_: evaluation.template_pooling_strategies.PoolingSCF
    use_detector_score: False
    pretty_name: CosineSim_SCF-Pool

  - evaluation_function: 
      _target_: evaluation.eval_functions.open_set_identification.CosineSim
      confidence_function: 
        _target_: evaluation.confidence_functions.MaxSimilarity_confidence
    embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
    template_pooling_strategy:
      _target_: evaluation.template_pooling_strategies.PoolingSCF
    use_detector_score: True
    pretty_name: CosineSim_DetScore_SCF-Pool

  - evaluation_function: 
      _target_: evaluation.eval_functions.open_set_identification.CosineSim
      confidence_function: 
        _target_: evaluation.confidence_functions.MaxSimilarity_confidence
    embeddings_path: ${test_dataset.dataset_path}/embeddings/pfe_embs_${test_dataset.dataset_name}.npz
    template_pooling_strategy:
      _target_: evaluation.template_pooling_strategies.PoolingPFEHarmonicMean
    use_detector_score: False
    pretty_name: CosineSim_PFEHarmonicMean-Pool

  - evaluation_function: 
      _target_: evaluation.eval_functions.open_set_identification.CosineSim
      confidence_function: 
        _target_: evaluation.confidence_functions.MaxSimilarity_confidence
    embeddings_path: ${test_dataset.dataset_path}/embeddings/pfe_embs_${test_dataset.dataset_name}.npz
    template_pooling_strategy:
      _target_: evaluation.template_pooling_strategies.PoolingPFEHarmonicMean
    use_detector_score: True
    pretty_name: CosineSim_DetScore_PFEHarmonicMean-Pool


# verification_methods:
#   - evaluation_function:
#       _target_: evaluation.eval_functions.verification.distance_based_evaluation.VerifEval
#       distance_function:
#         _target_: evaluation.eval_functions.distaince_functions.CosineSimPairwise
#     embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
#     template_pooling_strategy:
#       _target_: evaluation.template_pooling_strategies.PoolingDefault
#     use_detector_score: False
#     pretty_name: CosineSim_MeanPool

#   - evaluation_function:
#       _target_: evaluation.eval_functions.verification.distance_based_evaluation.VerifEval
#       distance_function:
#         _target_: evaluation.eval_functions.distaince_functions.CosineSimPairwise
#     embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
#     template_pooling_strategy:
#       _target_: evaluation.template_pooling_strategies.PoolingDefault
#     use_detector_score: True
#     pretty_name: CosineSim_DetScore_MeanPool

#   - evaluation_function:
#       _target_: evaluation.eval_functions.verification.distance_based_evaluation.VerifEval
#       distance_function:
#         _target_: evaluation.eval_functions.distaince_functions.CosineSimPairwise
#     embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
#     template_pooling_strategy:
#       _target_: evaluation.template_pooling_strategies.PoolingSCF
#     use_detector_score: False
#     pretty_name: CosineSim_SCF-Pool

#   - evaluation_function:
#       _target_: evaluation.eval_functions.verification.distance_based_evaluation.VerifEval
#       distance_function:
#         _target_: evaluation.eval_functions.distaince_functions.CosineSimPairwise
#     embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
#     template_pooling_strategy:
#       _target_: evaluation.template_pooling_strategies.PoolingSCF
#     use_detector_score: True
#     pretty_name: CosineSim_DetScore_SCF-Pool

#   - evaluation_function:
#       _target_: evaluation.eval_functions.verification.distance_based_evaluation.VerifEval
#       distance_function:
#         _target_: evaluation.eval_functions.distaince_functions.CosineSimPairwise
#     embeddings_path: ${test_dataset.dataset_path}/embeddings/pfe_embs_${test_dataset.dataset_name}.npz
#     template_pooling_strategy:
#       _target_: evaluation.template_pooling_strategies.PoolingPFEHarmonicMean
#     use_detector_score: False
#     pretty_name: CosineSim_PFEHarmonicMean-Pool

#   - evaluation_function:
#       _target_: evaluation.eval_functions.verification.distance_based_evaluation.VerifEval
#       distance_function:
#         _target_: evaluation.eval_functions.distaince_functions.CosineSimPairwise
#     embeddings_path: ${test_dataset.dataset_path}/embeddings/pfe_embs_${test_dataset.dataset_name}.npz
#     template_pooling_strategy:
#       _target_: evaluation.template_pooling_strategies.PoolingPFEHarmonicMean
#     use_detector_score: True
#     pretty_name: CosineSim_DetScore_PFEHarmonicMean-Pool
  











 
  # - evaluation_function: 
  #     _target_: evaluation.eval_functions.open_set_identification.CosineSim
  #     confidence_function: 
  #       _target_: evaluation.confidence_functions.NAC_confidence
  #       k: 15
  #       s: 1
  #       normalize: False
  #   embeddings_path: ${test_dataset.dataset_path}/embeddings/scf_embs_${test_dataset.dataset_name}.npz
  #   template_pooling_strategy:
  #     _target_: evaluation.template_pooling_strategies.PoolingSCF
  #   use_detector_score: True
  #   pretty_name: CosineSim_NAC-k=15