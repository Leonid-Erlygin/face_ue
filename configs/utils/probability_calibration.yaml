hydra:
  run:
    dir: ${exp_dir}

exp_dir: outputs/calibration/ms1m_auto_calibration_scf_${default_kappa}
use_two_galleries: False
recompute_template_pooling: False
num_bins: 10
draw_bin_importance: alpha
draw_averages: True
test_datasets:

  - _target_: evaluation.test_datasets.FaceRecogntioniDataset
    dataset_name: ms1m
    dataset_path: /app/datasets/ms1m_ident

  # - _target_: evaluation.test_datasets.FaceRecogntioniDataset
  #   dataset_name: IJBC
  #   dataset_path: /app/datasets/arcface_ijb/IJBC

  # - _target_: evaluation.test_datasets.FaceRecogntioniDataset
  #   dataset_name: IJBB
  #   dataset_path: /app/datasets/arcface_ijb/IJBB
  # - _target_: evaluation.test_datasets.FaceRecogntioniDataset
  #   dataset_name: survFace
  #   dataset_path: /app/datasets/QMUL-SurvFace/Face_Identification_Test_Set

default_kappa: 400
default_beta: 0.5
train_T: True
iter_num: 500
lr: 0.01

open_set_identification_methods:

  # - embeddings: scf
  #   template_pooling_strategy:
  #     _target_: evaluation.template_pooling_strategies.PoolingSCF
  #   use_detector_score: True
  #   sampler:
  #     _target_: evaluation.samplers.VonMisesFisher
  #     num_samples: 0 # set 0 to use mean of distr as one sample
  #   distance_function: 
  #     _target_: evaluation.distance_functions.open_set_identification.CosineSim
  #   recognition_method:
  #     _target_: evaluation.open_set_methods.posterior_prob_based.PosteriorProbability
  #     class_model: vMF
  #     kappa: ${default_kappa}
  #     beta: ${default_beta}
  #     uncertainty_type: maxprob
  #     alpha: 0
  #     aggregation: sum
  #     process_unc: prob
  #     T: 5.457409422052744
  #     T_data_unc: 1
  #   pretty_name: "vMF_T-5.457409422052744"

  - embeddings: scf
    template_pooling_strategy:
      _target_: evaluation.template_pooling_strategies.PoolingSCF
    use_detector_score: True
    sampler:
      _target_: evaluation.samplers.VonMisesFisher
      num_samples: 0 # set 0 to use mean of distr as one sample
    distance_function: 
      _target_: evaluation.distance_functions.open_set_identification.CosineSim
    recognition_method:
      _target_: evaluation.open_set_methods.posterior_prob_based.PosteriorProbability
      class_model: power
      kappa: ${default_kappa}
      beta: ${default_beta}
      uncertainty_type: maxprob
      alpha: 1
      aggregation: sum
      process_unc: prob
      T: 1
      T_data_unc: 30
    pretty_name: "SCF-30"

  # - embeddings: scf
  #   template_pooling_strategy:
  #     _target_: evaluation.template_pooling_strategies.PoolingSCF
  #   use_detector_score: True
  #   sampler:
  #     _target_: evaluation.samplers.VonMisesFisher
  #     num_samples: 0 # set 0 to use mean of distr as one sample
  #   distance_function: 
  #     _target_: evaluation.distance_functions.open_set_identification.CosineSim
  #   recognition_method:
  #     _target_: evaluation.open_set_methods.posterior_prob_based.PosteriorProbability
  #     class_model: power
  #     kappa: ${default_kappa}
  #     beta: ${default_beta}
  #     uncertainty_type: maxprob
  #     alpha: 1
  #     aggregation: sum
  #     process_unc: prob
  #     T: 1
  #     T_data_unc: 29.7574
  #   pretty_name: "SCF-29.75"

  # - embeddings: scf
  #   template_pooling_strategy:
  #     _target_: evaluation.template_pooling_strategies.PoolingSCF
  #   use_detector_score: True
  #   sampler:
  #     _target_: evaluation.samplers.VonMisesFisher
  #     num_samples: 0 # set 0 to use mean of distr as one sample
  #   distance_function: 
  #     _target_: evaluation.distance_functions.open_set_identification.CosineSim
  #   recognition_method:
  #     _target_: evaluation.open_set_methods.posterior_prob_based.PosteriorProbability
  #     class_model: power
  #     kappa: ${default_kappa}
  #     beta: ${default_beta}
  #     uncertainty_type: maxprob
  #     alpha: 1
  #     aggregation: sum
  #     process_unc: prob
  #     T: 1
  #     T_data_unc: 50
  #   pretty_name: "SCF-50"

